{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { AccordionContext, AccordionItemContext } from './Context';\nimport Collapse from '../Collapse';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nconst AccordionDetails = (_ref, ref) => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  const {\n    ...newProps\n  } = useThemeProps('AccordionDetails', props);\n  const {\n    isOpen\n  } = React.useContext(AccordionItemContext);\n  const {\n    AnimationProps\n  } = React.useContext(AccordionContext); //TODO: refactor for responsive prop\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(Collapse, _extends({}, AnimationProps, newProps, {\n    isOpen: isOpen,\n    ref: ref\n  }), children);\n};\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(AccordionDetails));","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,oBAA3B,QAAuD,WAAvD;AACA,OAAOC,QAAP,MAAqB,aAArB;AAMA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,MAAMC,gBAAgB,GAAG,OAEvBC,GAFuB,KAGpB;EAAA,IAFH;IAAEC,QAAF;IAAY,GAAGC;EAAf,CADuB;EAIvB,MAAM;IAAE,GAAGC;EAAL,IAAkBN,aAAa,CAAC,kBAAD,EAAqBK,KAArB,CAArC;EACA,MAAM;IAAEE;EAAF,IAAyCX,KAAK,CAACY,UAAN,CAC7CV,oBAD6C,CAA/C;EAGA,MAAM;IAAEW;EAAF,IAA6Cb,KAAK,CAACY,UAAN,CACjDX,gBADiD,CAAnD,CALG,CAQH;;EACA,IAAII,qBAAqB,CAACI,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,oBACET,oBAACG,QAAD,eAAcU,cAAd,EAAkCH,QAAlC;IAA4CC,MAAM,EAAEA,MAApD;IAA4DJ,GAAG,EAAEA;EAAjE,IACGC,QADH,CADF;AAKD,CApBD;AAsBA,4BAAeR,KAAK,CAACc,IAAN,eAAWd,KAAK,CAACe,UAAN,CAAiBT,gBAAjB,CAAX,CAAf","names":["React","AccordionContext","AccordionItemContext","Collapse","useThemeProps","useHasResponsiveProps","AccordionDetails","ref","children","props","newProps","isOpen","useContext","AnimationProps","memo","forwardRef"],"sources":["C:\\Users\\user\\Desktop\\대회\\Plura\\src\\main\\frontend\\node_modules\\native-base\\lib\\module\\components\\composites\\Accordion\\AccordionDetails.tsx"],"sourcesContent":["import React from 'react';\nimport { AccordionContext, AccordionItemContext } from './Context';\nimport Collapse from '../Collapse';\nimport type {\n  IAccordionDetailsProps,\n  IAccordionContextProps,\n  IAccordionItemContextProps,\n} from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionDetails = (\n  { children, ...props }: IAccordionDetailsProps,\n  ref?: any\n) => {\n  const { ...newProps } = useThemeProps('AccordionDetails', props);\n  const { isOpen }: IAccordionItemContextProps = React.useContext(\n    AccordionItemContext\n  );\n  const { AnimationProps }: IAccordionContextProps = React.useContext(\n    AccordionContext\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Collapse {...AnimationProps} {...newProps} isOpen={isOpen} ref={ref}>\n      {children}\n    </Collapse>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionDetails));\n"]},"metadata":{},"sourceType":"module"}