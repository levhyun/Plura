{"ast":null,"code":"import { mode, getColor, getColorScheme, transparentize } from '../tools';\nfunction getBg(props) {\n  let {\n    theme,\n    colorScheme,\n    status,\n    variant\n  } = props;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  const lightBg = variant === 'solid' ? getColor(theme, \"\".concat(colorScheme, \".600\"), colorScheme) : getColor(theme, \"\".concat(colorScheme, \".100\"), colorScheme);\n  const darkBg = variant === 'solid' ? getColor(theme, \"\".concat(colorScheme, \".700\"), colorScheme) : getColor(theme, \"\".concat(colorScheme, \".200\"), colorScheme);\n  return mode(lightBg, darkBg)(props);\n}\nconst variantSubtle = props => {\n  let {\n    colorScheme,\n    status\n  } = props;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n};\nconst variantOutline = props => {\n  let {\n    colorScheme,\n    status\n  } = props;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 1,\n    borderColor: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n};\nconst variantOutlineLight = props => {\n  let {\n    colorScheme,\n    status,\n    theme\n  } = props;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 1,\n    borderColor: transparentize(mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".500\"))(props), 0.2)(theme),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n    }\n  };\n};\nconst variantSolid = props => {\n  return {\n    borderWidth: 6,\n    borderColor: 'transparent',\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"coolGray.50\", \"warmGray.50\")(props)\n    }\n  };\n};\nconst variantLeftAccent = props => {\n  let {\n    colorScheme,\n    status\n  } = props;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 4,\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    },\n    borderColor: 'transparent',\n    borderLeftColor: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n  };\n};\nconst variantTopAccent = props => {\n  let {\n    colorScheme,\n    status\n  } = props;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 4,\n    borderColor: 'transparent',\n    borderTopColor: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props),\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n};\nconst variants = {\n  'subtle': variantSubtle,\n  'solid': variantSolid,\n  'left-accent': variantLeftAccent,\n  'top-accent': variantTopAccent,\n  'outline': variantOutline,\n  'outline-light': variantOutlineLight\n};\nexport const Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm'\n  },\n  variants,\n  defaultProps: {\n    colorScheme: 'primary',\n    variant: 'subtle'\n  }\n}; // AlertIcon\n\nexport const AlertIcon = {\n  baseStyle: {\n    size: 4\n  }\n};","map":{"version":3,"mappings":"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","names":["mode","getColor","getColorScheme","transparentize","getBg","props","theme","colorScheme","status","variant","lightBg","darkBg","variantSubtle","bg","_icon","color","variantOutline","borderWidth","borderColor","variantOutlineLight","variantSolid","variantLeftAccent","borderLeftColor","variantTopAccent","borderTopColor","variants","Alert","baseStyle","alignItems","justifyContent","p","space","borderRadius","defaultProps","AlertIcon","size"],"sources":["C:\\Users\\user\\Desktop\\대회\\Plura\\src\\main\\frontend\\node_modules\\native-base\\lib\\module\\theme\\v33x-theme\\components\\alert.ts"],"sourcesContent":["import { mode, getColor, getColorScheme, transparentize } from '../tools';\n\nfunction getBg(props: Record<string, any>) {\n  let { theme, colorScheme, status, variant } = props;\n\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  const lightBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.600`, colorScheme)\n      : getColor(theme, `${colorScheme}.100`, colorScheme);\n\n  const darkBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.700`, colorScheme)\n      : getColor(theme, `${colorScheme}.200`, colorScheme);\n  return mode(lightBg, darkBg)(props);\n}\n\nconst variantSubtle = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\n\nconst variantOutline = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 1,\n    borderColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\nconst variantOutlineLight = (props: Record<string, any>) => {\n  let { colorScheme, status, theme } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 1,\n    borderColor: transparentize(\n      mode(`${colorScheme}.600`, `${colorScheme}.500`)(props),\n      0.2\n    )(theme),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n  };\n};\n\nconst variantSolid = (props: Record<string, any>) => {\n  return {\n    borderWidth: 6,\n    borderColor: 'transparent',\n    bg: getBg(props),\n    _icon: { color: mode(`coolGray.50`, `warmGray.50`)(props) },\n  };\n};\nconst variantLeftAccent = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 4,\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n    borderColor: 'transparent',\n    borderLeftColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n  };\n};\nconst variantTopAccent = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 4,\n    borderColor: 'transparent',\n    borderTopColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\n\nconst variants = {\n  'subtle': variantSubtle,\n  'solid': variantSolid,\n  'left-accent': variantLeftAccent,\n  'top-accent': variantTopAccent,\n  'outline': variantOutline,\n  'outline-light': variantOutlineLight,\n};\n\nexport const Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm',\n  },\n  variants,\n  defaultProps: {\n    colorScheme: 'primary',\n    variant: 'subtle',\n  },\n};\n\n// AlertIcon\n\nexport const AlertIcon = {\n  baseStyle: {\n    size: 4,\n  },\n};\n"]},"metadata":{},"sourceType":"module"}