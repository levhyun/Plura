{"ast":null,"code":"import { getStyleAndFilteredProps } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\nimport { getStyledSystemPropsAndRestProps } from '../utils/getStyledSystemPropsAndRestProps'; //@ts-ignore\n\nimport stableHash from 'stable-hash';\nexport const useStyledSystemPropsResolver = _ref => {\n  let {\n    style: propStyle,\n    debug,\n    ...props\n  } = _ref;\n  const theme = useTheme();\n  const {\n    currentBreakpoint,\n    config\n  } = useNativeBaseConfig('makeStyledComponent');\n  const strictMode = config.strictMode;\n  const {\n    getResponsiveStyles\n  } = useResponsiveQuery();\n  const {\n    styledSystemProps,\n    restProps\n  } = getStyledSystemPropsAndRestProps(props);\n  const {\n    style,\n    dataSet,\n    styleFromProps\n  } = React.useMemo(() => {\n    const {\n      styleSheet,\n      dataSet,\n      styleFromProps\n    } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles\n    });\n    if (propStyle) {\n      return {\n        style: [styleSheet.box, propStyle],\n        dataSet,\n        styleFromProps\n      };\n    } else {\n      return {\n        style: styleSheet.box,\n        dataSet,\n        styleFromProps\n      };\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  stableHash(styledSystemProps), theme, debug, currentBreakpoint, strictMode, propStyle, getResponsiveStyles, props]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n  restProps.dataSet = {\n    ...restProps.dataSet,\n    ...dataSet\n  };\n  return [style, restProps, styleFromProps];\n};","map":{"version":3,"mappings":"AAAA,SAASA,wBAAT,QAAyC,wBAAzC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AACA,SAASC,gCAAT,QAAiD,2CAAjD,C,CACA;;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,OAAO,MAAMC,4BAA4B,GAAG,QAIjC;EAAA,IAJkC;IAC3CC,KAAK,EAAEC,SADoC;IAE3CC,KAF2C;IAG3C,GAAGC;EAHwC,CAAD;EAK1C,MAAMC,KAAK,GAAGX,QAAQ,EAAtB;EACA,MAAM;IAAEY,iBAAF;IAAqBC;EAArB,IAAgCX,mBAAmB,CACvD,qBADuD,CAAzD;EAGA,MAAMY,UAAU,GAAGD,MAAM,CAACC,UAA1B;EAEA,MAAM;IAAEC;EAAF,IAA0BZ,kBAAkB,EAAlD;EAEA,MAAM;IAAEa,iBAAF;IAAqBC;EAArB,IAAmCb,gCAAgC,CACvEM,KADuE,CAAzE;EAIA,MAAM;IAAEH,KAAF;IAASW,OAAT;IAAkBC;EAAlB,IAAqClB,KAAK,CAACmB,OAAN,CAAc,MAAM;IAC7D,MAAM;MAAEC,UAAF;MAAcH,OAAd;MAAuBC;IAAvB,IAA0CpB,wBAAwB,CAAC;MACvEiB,iBADuE;MAEvEL,KAFuE;MAGvEF,KAHuE;MAIvEG,iBAJuE;MAKvEE,UALuE;MAMvEC;IANuE,CAAD,CAAxE;IAQA,IAAIP,SAAJ,EAAe;MACb,OAAO;QAAED,KAAK,EAAE,CAACc,UAAU,CAACC,GAAZ,EAAiBd,SAAjB,CAAT;QAAsCU,OAAtC;QAA+CC;MAA/C,CAAP;IACD,CAFD,MAEO;MACL,OAAO;QAAEZ,KAAK,EAAEc,UAAU,CAACC,GAApB;QAAyBJ,OAAzB;QAAkCC;MAAlC,CAAP;IACD,CAb4D,CAc7D;EACD,CAf0C,EAexC;EACD;EACAd,UAAU,CAACW,iBAAD,CAFT,EAGDL,KAHC,EAIDF,KAJC,EAKDG,iBALC,EAMDE,UANC,EAODN,SAPC,EAQDO,mBARC,EASDL,KATC,CAfwC,CAA3C;EA0BA,IAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0ChB,KAA9C,EAAqD;IACnD;IACAiB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bf,iBAA9B;EACD;EAEDK,SAAS,CAACC,OAAV,GAAoB;IAAE,GAAGD,SAAS,CAACC,OAAf;IAAwB,GAAGA;EAA3B,CAApB;EAEA,OAAO,CAACX,KAAD,EAAQU,SAAR,EAAmBE,cAAnB,CAAP;AACD,CAnDM","names":["getStyleAndFilteredProps","useTheme","React","useNativeBaseConfig","useResponsiveQuery","getStyledSystemPropsAndRestProps","stableHash","useStyledSystemPropsResolver","style","propStyle","debug","props","theme","currentBreakpoint","config","strictMode","getResponsiveStyles","styledSystemProps","restProps","dataSet","styleFromProps","useMemo","styleSheet","box","process","env","NODE_ENV","console","log"],"sources":["C:\\Users\\user\\Desktop\\대회\\Plura\\src\\main\\frontend\\node_modules\\native-base\\lib\\module\\hooks\\useStyledSystemPropsResolver.ts"],"sourcesContent":["import { getStyleAndFilteredProps } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\nimport { getStyledSystemPropsAndRestProps } from '../utils/getStyledSystemPropsAndRestProps';\n//@ts-ignore\nimport stableHash from 'stable-hash';\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { getResponsiveStyles } = useResponsiveQuery();\n\n  const { styledSystemProps, restProps } = getStyledSystemPropsAndRestProps(\n    props\n  );\n\n  const { style, dataSet, styleFromProps } = React.useMemo(() => {\n    const { styleSheet, dataSet, styleFromProps } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], dataSet, styleFromProps };\n    } else {\n      return { style: styleSheet.box, dataSet, styleFromProps };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stableHash(styledSystemProps),\n    theme,\n    debug,\n    currentBreakpoint,\n    strictMode,\n    propStyle,\n    getResponsiveStyles,\n    props,\n  ]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = { ...restProps.dataSet, ...dataSet };\n\n  return [style, restProps, styleFromProps];\n};\n"]},"metadata":{},"sourceType":"module"}