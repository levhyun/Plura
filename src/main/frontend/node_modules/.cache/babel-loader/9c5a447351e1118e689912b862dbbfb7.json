{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { Overlay } from '../../primitives/Overlay';\nimport { PresenceTransition } from '../Transitions';\nimport VStack from '../../primitives/Stack/VStack';\nimport React, { createContext, useState, useMemo } from 'react';\nimport { AccessibilityInfo, Platform, SafeAreaView } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useKeyboardBottomInset } from '../../../utils';\nconst INSET = 50;\nconst POSITIONS = {\n  'top': {\n    top: INSET,\n    left: 0,\n    right: 0\n  },\n  'top-right': {\n    top: INSET,\n    right: 0\n  },\n  'top-left': {\n    top: INSET,\n    left: 0\n  },\n  'bottom': {\n    bottom: INSET,\n    left: 0,\n    right: 0\n  },\n  'bottom-left': {\n    bottom: INSET,\n    left: 0\n  },\n  'bottom-right': {\n    bottom: INSET,\n    right: 0\n  }\n};\nconst initialAnimationOffset = 24;\nconst transitionConfig = {\n  'bottom': initialAnimationOffset,\n  'top': -initialAnimationOffset,\n  'top-right': -initialAnimationOffset,\n  'top-left': -initialAnimationOffset,\n  'bottom-left': initialAnimationOffset,\n  'bottom-right': initialAnimationOffset\n};\nconst ToastContext = /*#__PURE__*/createContext({\n  toastInfo: {},\n  setToastInfo: () => {},\n  setToast: () => {},\n  removeToast: () => {},\n  hideAll: () => {},\n  isActive: () => false,\n  visibleToasts: {},\n  setVisibleToasts: () => {},\n  hideToast: () => {}\n});\nconst CustomToast = _ref => {\n  let {\n    _overlay,\n    _stack,\n    _presenceTransition\n  } = _ref;\n  const {\n    toastInfo,\n    visibleToasts,\n    removeToast\n  } = React.useContext(ToastContext);\n  const bottomInset = useKeyboardBottomInset() * 2;\n  const getPositions = () => {\n    return Object.keys(toastInfo);\n  };\n  let hasToastOnOverlay = false;\n  getPositions().map(position => {\n    var _toastInfo$position;\n    if (((_toastInfo$position = toastInfo[position]) === null || _toastInfo$position === void 0 ? void 0 : _toastInfo$position.length) > 0) hasToastOnOverlay = true;\n  });\n  return getPositions().length > 0 ? /*#__PURE__*/React.createElement(Overlay, _extends({}, _overlay, {\n    isOpen: hasToastOnOverlay\n  }), getPositions().map(position => {\n    if (Object.keys(POSITIONS).includes(position)) return /*#__PURE__*/React.createElement(VStack, _extends({}, _stack, {\n      key: position // @ts-ignore\n    }, POSITIONS[position]),\n    // @ts-ignore\n    toastInfo[position].map(toast => /*#__PURE__*/React.createElement(PresenceTransition, _extends({}, _presenceTransition, {\n      key: toast.id,\n      visible: visibleToasts[toast.id],\n      onTransitionComplete: status => {\n        if (status === 'exited') {\n          var _toast$config, _toast$config2;\n          removeToast(toast.id);\n          ((_toast$config = toast.config) === null || _toast$config === void 0 ? void 0 : _toast$config.onCloseComplete) && ((_toast$config2 = toast.config) === null || _toast$config2 === void 0 ? void 0 : _toast$config2.onCloseComplete());\n        }\n      },\n      initial: {\n        opacity: 0,\n        translateY: transitionConfig[position]\n      }\n    }), /*#__PURE__*/React.createElement(SafeAreaView, null, /*#__PURE__*/React.createElement(Box, {\n      bottom: ['bottom', 'bottom-left', 'bottom-right'].includes(position) ? bottomInset + 'px' : undefined\n    }, toast.component)))));else return null;\n  })) : null;\n};\nexport const ToastProvider = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  const [toastInfo, setToastInfo] = useState({});\n  const [visibleToasts, setVisibleToasts] = useState({});\n  const [themeProps] = useState(usePropsResolution('Toast', {}));\n  const toastIndex = React.useRef(1);\n  const hideAll = React.useCallback(() => {\n    setVisibleToasts({});\n  }, [setVisibleToasts]);\n  const hideToast = React.useCallback(id => {\n    setVisibleToasts(prevVisibleToasts => ({\n      ...prevVisibleToasts,\n      [id]: false\n    }));\n  }, [setVisibleToasts]);\n  const isActive = React.useCallback(id => {\n    for (const toastPosition of Object.keys(toastInfo)) {\n      const positionArray = toastInfo[toastPosition];\n      return positionArray.findIndex(toastData => toastData.id === id) > -1;\n    }\n    return false;\n  }, [toastInfo]);\n  const removeToast = React.useCallback(id => {\n    setToastInfo(prev => {\n      for (const toastPosition of Object.keys(prev)) {\n        const positionArray = prev[toastPosition];\n        const isToastPresent = positionArray.findIndex(toastData => toastData.id === id) > -1;\n        if (isToastPresent) {\n          const newPositionArray = positionArray.filter(item => item.id !== id);\n          const temp = {};\n          temp[toastPosition] = newPositionArray;\n          const newToastInfo = {\n            ...prev,\n            ...temp\n          };\n          return newToastInfo;\n        }\n      }\n      return prev;\n    });\n  }, [setToastInfo]);\n  const setToast = React.useCallback(props => {\n    const {\n      placement = 'bottom',\n      title,\n      render,\n      id = toastIndex.current++,\n      description,\n      duration = 5000,\n      _title,\n      _description,\n      accessibilityAnnouncement,\n      ...rest\n    } = props;\n    let positionToastArray = toastInfo[placement];\n    if (!positionToastArray) positionToastArray = [];\n    let component = null;\n    if (render) {\n      component = render({\n        id\n      });\n    } else {\n      component = /*#__PURE__*/\n      // Below VStack is the default component where all the direct props spread.\n      React.createElement(VStack, _extends({}, themeProps, rest), /*#__PURE__*/React.createElement(Box, {\n        _text: {\n          ...themeProps._title,\n          ..._title\n        }\n      }, title), description && /*#__PURE__*/React.createElement(Box, {\n        _text: {\n          ...themeProps._description,\n          ..._description\n        }\n      }, description));\n    }\n    toastInfo[placement] = [...positionToastArray, {\n      component,\n      id,\n      config: props\n    }];\n    setToastInfo({\n      ...toastInfo\n    });\n    setVisibleToasts({\n      ...visibleToasts,\n      [id]: true\n    });\n    if (duration !== null) {\n      setTimeout(function () {\n        hideToast(id);\n      }, duration);\n    } // iOS doesn't support accessibilityLiveRegion\n\n    if (accessibilityAnnouncement && Platform.OS === 'ios') {\n      AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n    }\n    return id;\n  }, [themeProps, toastInfo, visibleToasts, hideToast]);\n  const contextValue = React.useMemo(() => {\n    return {\n      toastInfo,\n      setToastInfo,\n      setToast,\n      removeToast,\n      hideAll,\n      isActive,\n      visibleToasts,\n      setVisibleToasts,\n      hideToast\n    };\n  }, [toastInfo, setToastInfo, setToast, removeToast, hideAll, isActive, visibleToasts, setVisibleToasts, hideToast]);\n  return /*#__PURE__*/React.createElement(ToastContext.Provider, {\n    value: contextValue\n  }, children, /*#__PURE__*/React.createElement(CustomToast, {\n    _overlay: themeProps._overlay,\n    _stack: themeProps._stack,\n    _presenceTransition: themeProps._presenceTransition\n  }));\n};\nexport const useToast = () => {\n  const {\n    setToast,\n    hideAll,\n    isActive,\n    hideToast\n  } = React.useContext(ToastContext);\n  const toast = useMemo(() => ({\n    show: setToast,\n    close: hideToast,\n    closeAll: hideAll,\n    isActive\n  }), [setToast, hideAll, isActive, hideToast]);\n  return toast;\n};\nexport const ToastRef = /*#__PURE__*/React.createRef();\nexport const Toast = {\n  show: props => {\n    var _ToastRef$current;\n    return (_ToastRef$current = ToastRef.current) === null || _ToastRef$current === void 0 ? void 0 : _ToastRef$current.show(props);\n  },\n  close: id => {\n    var _ToastRef$current2;\n    return (_ToastRef$current2 = ToastRef.current) === null || _ToastRef$current2 === void 0 ? void 0 : _ToastRef$current2.close(id);\n  },\n  closeAll: () => {\n    var _ToastRef$current3;\n    return (_ToastRef$current3 = ToastRef.current) === null || _ToastRef$current3 === void 0 ? void 0 : _ToastRef$current3.closeAll();\n  },\n  isActive: id => {\n    var _ToastRef$current4;\n    return (_ToastRef$current4 = ToastRef.current) === null || _ToastRef$current4 === void 0 ? void 0 : _ToastRef$current4.isActive(id);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,0BAAxB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,KAAP,IACEC,aADF,EAGEC,QAHF,EAIEC,OAJF,QAKO,OALP;AAMA,SAASC,iBAAT,EAA4BC,QAA5B,EAAsCC,YAAtC,QAA0D,cAA1D;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AAEA,SAASC,sBAAT,QAAuC,gBAAvC;AACA,MAAMC,KAAK,GAAG,EAAd;AAEA,MAAMC,SAAS,GAAG;EAChB,OAAO;IACLC,GAAG,EAAEF,KADA;IAELG,IAAI,EAAE,CAFD;IAGLC,KAAK,EAAE;EAHF,CADS;EAMhB,aAAa;IACXF,GAAG,EAAEF,KADM;IAEXI,KAAK,EAAE;EAFI,CANG;EAUhB,YAAY;IACVF,GAAG,EAAEF,KADK;IAEVG,IAAI,EAAE;EAFI,CAVI;EAchB,UAAU;IACRE,MAAM,EAAEL,KADA;IAERG,IAAI,EAAE,CAFE;IAGRC,KAAK,EAAE;EAHC,CAdM;EAmBhB,eAAe;IACbC,MAAM,EAAEL,KADK;IAEbG,IAAI,EAAE;EAFO,CAnBC;EAuBhB,gBAAgB;IACdE,MAAM,EAAEL,KADM;IAEdI,KAAK,EAAE;EAFO;AAvBA,CAAlB;AA6BA,MAAME,sBAAsB,GAAG,EAA/B;AAEA,MAAMC,gBAAqB,GAAG;EAC5B,UAAUD,sBADkB;EAE5B,OAAO,CAACA,sBAFoB;EAG5B,aAAa,CAACA,sBAHc;EAI5B,YAAY,CAACA,sBAJe;EAK5B,eAAeA,sBALa;EAM5B,gBAAgBA;AANY,CAA9B;AASA,MAAME,YAAY,gBAAGjB,aAAa,CAAgB;EAChDkB,SAAS,EAAE,EADqC;EAEhDC,YAAY,EAAE,MAAM,CAAE,CAF0B;EAGhDC,QAAQ,EAAE,MAAM,CAAE,CAH8B;EAIhDC,WAAW,EAAE,MAAM,CAAE,CAJ2B;EAKhDC,OAAO,EAAE,MAAM,CAAE,CAL+B;EAMhDC,QAAQ,EAAE,MAAM,KANgC;EAOhDC,aAAa,EAAE,EAPiC;EAQhDC,gBAAgB,EAAE,MAAM,CAAE,CARsB;EAShDC,SAAS,EAAE,MAAM,CAAE;AAT6B,CAAhB,CAAlC;AAYA,MAAMC,WAAW,GAAG,QAAoD;EAAA,IAAnD;IAAEC,QAAF;IAAYC,MAAZ;IAAoBC;EAApB,CAAD;EAClB,MAAM;IAAEZ,SAAF;IAAaM,aAAb;IAA4BH;EAA5B,IAA4CtB,KAAK,CAACgC,UAAN,CAChDd,YADgD,CAAlD;EAIA,MAAMe,WAAW,GAAGxB,sBAAsB,KAAK,CAA/C;EACA,MAAMyB,YAAY,GAAG,MAAM;IACzB,OAAOC,MAAM,CAACC,IAAP,CAAYjB,SAAZ,CAAP;EACD,CAFD;EAIA,IAAIkB,iBAAiB,GAAG,KAAxB;EACAH,YAAY,GAAGI,GAAf,CAAoBC,QAAD,IAAc;IAAA;IAC/B,IAAI,iCAAS,CAACA,QAAD,CAAT,4EAAqBC,MAArB,IAA8B,CAAlC,EAAqCH,iBAAiB,GAAG,IAApB;EACtC,CAFD;EAIA,OAAOH,YAAY,GAAGM,MAAf,GAAwB,CAAxB,gBACLxC,oBAACH,OAAD,eAAagC,QAAb;IAAuBY,MAAM,EAAEJ;EAA/B,IACGH,YAAY,GAAGI,GAAf,CAAoBC,QAAD,IAAsB;IACxC,IAAIJ,MAAM,CAACC,IAAP,CAAYzB,SAAZ,EAAuB+B,QAAvB,CAAgCH,QAAhC,CAAJ,EACE,oBACEvC,oBAACD,MAAD,eACM+B,MADN;MAEEa,GAAG,EAAEJ,QAFP,CAGE;IAHF,GAIM5B,SAAS,CAAC4B,QAAD,CAJf;IAOI;IACApB,SAAS,CAACoB,QAAD,CAAT,CAAoBD,GAApB,CAAyBM,KAAD,iBACtB5C,oBAACF,kBAAD,eACMiC,mBADN;MAEEY,GAAG,EAAEC,KAAK,CAACC,EAFb;MAGEC,OAAO,EAAErB,aAAa,CAACmB,KAAK,CAACC,EAAP,CAHxB;MAIEE,oBAAoB,EAAGC,MAAD,IAAiB;QACrC,IAAIA,MAAM,KAAK,QAAf,EAAyB;UAAA;UACvB1B,WAAW,CAACsB,KAAK,CAACC,EAAP,CAAX;UACA,uBAAK,CAACI,MAAN,gEAAcC,eAAd,wBACEN,KAAK,CAACK,MADR,mDACEE,eAAcD,eAAd,EADF;QAED;MACF,CAVH;MAWEE,OAAO,EAAE;QACPC,OAAO,EAAE,CADF;QAEPC,UAAU,EAAErC,gBAAgB,CAACsB,QAAD;MAFrB;IAXX,iBAgBEvC,oBAACM,YAAD,qBACEN,oBAACO,GAAD;MACEQ,MAAM,EACJ,CAAC,QAAD,EAAW,aAAX,EAA0B,cAA1B,EAA0C2B,QAA1C,CACEH,QADF,IAGIN,WAAW,GAAG,IAHlB,GAIIsB;IANR,GASGX,KAAK,CAACY,SATT,CADF,CAhBF,CADF,CARJ,CADF,CADF,KA6CK,OAAO,IAAP;EACN,CA/CA,CADH,CADK,GAmDH,IAnDJ;AAoDD,CAnED;AAqEA,OAAO,MAAMC,aAAa,GAAG,SAAqC;EAAA,IAApC;IAAEC;EAAF,CAAD;EAC3B,MAAM,CAACvC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAa,EAAb,CAA1C;EACA,MAAM,CAACuB,aAAD,EAAgBC,gBAAhB,IAAoCxB,QAAQ,CAIhD,EAJgD,CAAlD;EAMA,MAAM,CAACyD,UAAD,IAAezD,QAAQ,CAACM,kBAAkB,CAAC,OAAD,EAAU,EAAV,CAAnB,CAA7B;EACA,MAAMoD,UAAU,GAAG5D,KAAK,CAAC6D,MAAN,CAAa,CAAb,CAAnB;EAEA,MAAMtC,OAAO,GAAGvB,KAAK,CAAC8D,WAAN,CAAkB,MAAM;IACtCpC,gBAAgB,CAAC,EAAD,CAAhB;EACD,CAFe,EAEb,CAACA,gBAAD,CAFa,CAAhB;EAIA,MAAMC,SAAS,GAAG3B,KAAK,CAAC8D,WAAN,CACfjB,EAAD,IAAa;IACXnB,gBAAgB,CAAEqC,iBAAD,KAAwB;MACvC,GAAGA,iBADoC;MAEvC,CAAClB,EAAD,GAAM;IAFiC,CAAxB,CAAD,CAAhB;EAID,CANe,EAOhB,CAACnB,gBAAD,CAPgB,CAAlB;EAUA,MAAMF,QAAQ,GAAGxB,KAAK,CAAC8D,WAAN,CACdjB,EAAD,IAAa;IACX,KAAK,MAAMmB,aAAX,IAA4B7B,MAAM,CAACC,IAAP,CAAYjB,SAAZ,CAA5B,EAAoD;MAClD,MAAM8C,aAA4B,GAAG9C,SAAS,CAAC6C,aAAD,CAA9C;MACA,OAAOC,aAAa,CAACC,SAAd,CAAyBC,SAAD,IAAeA,SAAS,CAACtB,EAAV,KAAiBA,EAAxD,IAA8D,CAAC,CAAtE;IACD;IAED,OAAO,KAAP;EACD,CARc,EASf,CAAC1B,SAAD,CATe,CAAjB;EAYA,MAAMG,WAAW,GAAGtB,KAAK,CAAC8D,WAAN,CACjBjB,EAAD,IAAa;IACXzB,YAAY,CAAEgD,IAAD,IAAU;MACrB,KAAK,MAAMJ,aAAX,IAA4B7B,MAAM,CAACC,IAAP,CAAYgC,IAAZ,CAA5B,EAA+C;QAC7C,MAAMH,aAA4B,GAAGG,IAAI,CAACJ,aAAD,CAAzC;QACA,MAAMK,cAAc,GAClBJ,aAAa,CAACC,SAAd,CAAyBC,SAAD,IAAeA,SAAS,CAACtB,EAAV,KAAiBA,EAAxD,IAA8D,CAAC,CADjE;QAGA,IAAIwB,cAAJ,EAAoB;UAClB,MAAMC,gBAAgB,GAAGL,aAAa,CAACM,MAAd,CACtBC,IAAD,IAAUA,IAAI,CAAC3B,EAAL,KAAYA,EADC,CAAzB;UAGA,MAAM4B,IAAS,GAAG,EAAlB;UACAA,IAAI,CAACT,aAAD,CAAJ,GAAsBM,gBAAtB;UAEA,MAAMI,YAAY,GAAG;YAAE,GAAGN,IAAL;YAAW,GAAGK;UAAd,CAArB;UACA,OAAOC,YAAP;QACD;MACF;MAED,OAAON,IAAP;IACD,CAnBW,CAAZ;EAoBD,CAtBiB,EAuBlB,CAAChD,YAAD,CAvBkB,CAApB;EA0BA,MAAMC,QAAQ,GAAGrB,KAAK,CAAC8D,WAAN,CACda,KAAD,IAAgC;IAC9B,MAAM;MACJC,SAAS,GAAG,QADR;MAEJC,KAFI;MAGJC,MAHI;MAIJjC,EAAE,GAAGe,UAAU,CAACmB,OAAX,EAJD;MAKJC,WALI;MAMJC,QAAQ,GAAG,IANP;MAOJC,MAPI;MAQJC,YARI;MASJC,yBATI;MAUJ,GAAGC;IAVC,IAWFV,KAXJ;IAaA,IAAIW,kBAAkB,GAAGnE,SAAS,CAACyD,SAAD,CAAlC;IACA,IAAI,CAACU,kBAAL,EAAyBA,kBAAkB,GAAG,EAArB;IAEzB,IAAI9B,SAAS,GAAG,IAAhB;IAEA,IAAIsB,MAAJ,EAAY;MACVtB,SAAS,GAAGsB,MAAM,CAAC;QAAEjC;MAAF,CAAD,CAAlB;IACD,CAFD,MAEO;MACLW,SAAS;MACP;MACAxD,oBAACD,MAAD,eAAY4D,UAAZ,EAA4B0B,IAA5B,gBACErF,oBAACO,GAAD;QAAKgF,KAAK,EAAE;UAAE,GAAG5B,UAAU,CAACuB,MAAhB;UAAwB,GAAGA;QAA3B;MAAZ,GAAkDL,KAAlD,CADF,EAEGG,WAAW,iBACVhF,oBAACO,GAAD;QAAKgF,KAAK,EAAE;UAAE,GAAG5B,UAAU,CAACwB,YAAhB;UAA8B,GAAGA;QAAjC;MAAZ,GACGH,WADH,CAHJ,CAFF;IAWD;IAED7D,SAAS,CAACyD,SAAD,CAAT,GAAuB,CACrB,GAAGU,kBADkB,EAErB;MAAE9B,SAAF;MAAaX,EAAb;MAAiBI,MAAM,EAAE0B;IAAzB,CAFqB,CAAvB;IAKAvD,YAAY,CAAC;MAAE,GAAGD;IAAL,CAAD,CAAZ;IAEAO,gBAAgB,CAAC;MAAE,GAAGD,aAAL;MAAoB,CAACoB,EAAD,GAAM;IAA1B,CAAD,CAAhB;IACA,IAAIoC,QAAQ,KAAK,IAAjB,EAAuB;MACrBO,UAAU,CAAC,YAAY;QACrB7D,SAAS,CAACkB,EAAD,CAAT;MACD,CAFS,EAEPoC,QAFO,CAAV;IAGD,CA/C6B,CAiD9B;;IACA,IAAIG,yBAAyB,IAAI/E,QAAQ,CAACoF,EAAT,KAAgB,KAAjD,EAAwD;MACtDrF,iBAAiB,CAACsF,wBAAlB,CAA2CN,yBAA3C;IACD;IAED,OAAOvC,EAAP;EACD,CAxDc,EAyDf,CAACc,UAAD,EAAaxC,SAAb,EAAwBM,aAAxB,EAAuCE,SAAvC,CAzDe,CAAjB;EA4DA,MAAMgE,YAAY,GAAG3F,KAAK,CAACG,OAAN,CAAc,MAAM;IACvC,OAAO;MACLgB,SADK;MAELC,YAFK;MAGLC,QAHK;MAILC,WAJK;MAKLC,OALK;MAMLC,QANK;MAOLC,aAPK;MAQLC,gBARK;MASLC;IATK,CAAP;EAWD,CAZoB,EAYlB,CACDR,SADC,EAEDC,YAFC,EAGDC,QAHC,EAIDC,WAJC,EAKDC,OALC,EAMDC,QANC,EAODC,aAPC,EAQDC,gBARC,EASDC,SATC,CAZkB,CAArB;EAwBA,oBACE3B,oBAACkB,YAAD,CAAc0E,QAAd;IAAuBC,KAAK,EAAEF;EAA9B,GACGjC,QADH,eAEE1D,oBAAC4B,WAAD;IACEC,QAAQ,EAAE8B,UAAU,CAAC9B,QADvB;IAEEC,MAAM,EAAE6B,UAAU,CAAC7B,MAFrB;IAGEC,mBAAmB,EAAE4B,UAAU,CAAC5B;EAHlC,EAFF,CADF;AAUD,CA7JM;AA+JP,OAAO,MAAM+D,QAAQ,GAAG,MAAM;EAC5B,MAAM;IAAEzE,QAAF;IAAYE,OAAZ;IAAqBC,QAArB;IAA+BG;EAA/B,IAA6C3B,KAAK,CAACgC,UAAN,CACjDd,YADiD,CAAnD;EAIA,MAAM0B,KAAK,GAAGzC,OAAO,CACnB,OAAO;IACL4F,IAAI,EAAE1E,QADD;IAEL2E,KAAK,EAAErE,SAFF;IAGLsE,QAAQ,EAAE1E,OAHL;IAILC;EAJK,CAAP,CADmB,EAOnB,CAACH,QAAD,EAAWE,OAAX,EAAoBC,QAApB,EAA8BG,SAA9B,CAPmB,CAArB;EAUA,OAAOiB,KAAP;AACD,CAhBM;AAoBP,OAAO,MAAMsD,QAAQ,gBAAGlG,KAAK,CAACmG,SAAN,EAAjB;AAEP,OAAO,MAAMC,KAAoB,GAAG;EAClCL,IAAI,EAAGpB,KAAD;IAAA;IAAA,4BAAwBuB,QAAQ,CAACnB,OAAjC,sDAAwBsB,kBAAkBN,IAAlB,CAAuBpB,KAAvB,CAAxB;EAAA,CAD4B;EAElCqB,KAAK,EAAGnD,EAAD;IAAA;IAAA,6BAAaqD,QAAQ,CAACnB,OAAtB,uDAAauB,mBAAkBN,KAAlB,CAAwBnD,EAAxB,CAAb;EAAA,CAF2B;EAGlCoD,QAAQ,EAAE;IAAA;IAAA,6BAAMC,QAAQ,CAACnB,OAAf,uDAAMwB,mBAAkBN,QAAlB,EAAN;EAAA,CAHwB;EAIlCzE,QAAQ,EAAGqB,EAAD;IAAA;IAAA,6BAAaqD,QAAQ,CAACnB,OAAtB,uDAAayB,mBAAkBhF,QAAlB,CAA2BqB,EAA3B,CAAb;EAAA;AAJwB,CAA7B","names":["Overlay","PresenceTransition","VStack","React","createContext","useState","useMemo","AccessibilityInfo","Platform","SafeAreaView","Box","usePropsResolution","useKeyboardBottomInset","INSET","POSITIONS","top","left","right","bottom","initialAnimationOffset","transitionConfig","ToastContext","toastInfo","setToastInfo","setToast","removeToast","hideAll","isActive","visibleToasts","setVisibleToasts","hideToast","CustomToast","_overlay","_stack","_presenceTransition","useContext","bottomInset","getPositions","Object","keys","hasToastOnOverlay","map","position","length","isOpen","includes","key","toast","id","visible","onTransitionComplete","status","config","onCloseComplete","_toast$config2","initial","opacity","translateY","undefined","component","ToastProvider","children","themeProps","toastIndex","useRef","useCallback","prevVisibleToasts","toastPosition","positionArray","findIndex","toastData","prev","isToastPresent","newPositionArray","filter","item","temp","newToastInfo","props","placement","title","render","current","description","duration","_title","_description","accessibilityAnnouncement","rest","positionToastArray","_text","setTimeout","OS","announceForAccessibility","contextValue","Provider","value","useToast","show","close","closeAll","ToastRef","createRef","Toast","_ToastRef$current","_ToastRef$current2","_ToastRef$current3","_ToastRef$current4"],"sources":["C:\\Users\\user\\node_modules\\native-base\\lib\\module\\components\\composites\\Toast\\Toast.tsx"],"sourcesContent":["import { Overlay } from '../../primitives/Overlay';\nimport { PresenceTransition } from '../Transitions';\nimport VStack from '../../primitives/Stack/VStack';\nimport React, {\n  createContext,\n  MutableRefObject,\n  useState,\n  useMemo,\n} from 'react';\nimport { AccessibilityInfo, Platform, SafeAreaView } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport type { IToastContext, IToastInfo, IToast, IToastProps } from './types';\nimport { useKeyboardBottomInset } from '../../../utils';\nconst INSET = 50;\n\nconst POSITIONS = {\n  'top': {\n    top: INSET,\n    left: 0,\n    right: 0,\n  },\n  'top-right': {\n    top: INSET,\n    right: 0,\n  },\n  'top-left': {\n    top: INSET,\n    left: 0,\n  },\n  'bottom': {\n    bottom: INSET,\n    left: 0,\n    right: 0,\n  },\n  'bottom-left': {\n    bottom: INSET,\n    left: 0,\n  },\n  'bottom-right': {\n    bottom: INSET,\n    right: 0,\n  },\n};\n\nconst initialAnimationOffset = 24;\n\nconst transitionConfig: any = {\n  'bottom': initialAnimationOffset,\n  'top': -initialAnimationOffset,\n  'top-right': -initialAnimationOffset,\n  'top-left': -initialAnimationOffset,\n  'bottom-left': initialAnimationOffset,\n  'bottom-right': initialAnimationOffset,\n};\n\nconst ToastContext = createContext<IToastContext>({\n  toastInfo: {},\n  setToastInfo: () => {},\n  setToast: () => {},\n  removeToast: () => {},\n  hideAll: () => {},\n  isActive: () => false,\n  visibleToasts: {},\n  setVisibleToasts: () => {},\n  hideToast: () => {},\n});\n\nconst CustomToast = ({ _overlay, _stack, _presenceTransition }: any) => {\n  const { toastInfo, visibleToasts, removeToast } = React.useContext(\n    ToastContext\n  );\n\n  const bottomInset = useKeyboardBottomInset() * 2;\n  const getPositions = () => {\n    return Object.keys(toastInfo);\n  };\n\n  let hasToastOnOverlay = false;\n  getPositions().map((position) => {\n    if (toastInfo[position]?.length > 0) hasToastOnOverlay = true;\n  });\n\n  return getPositions().length > 0 ? (\n    <Overlay {..._overlay} isOpen={hasToastOnOverlay}>\n      {getPositions().map((position: string) => {\n        if (Object.keys(POSITIONS).includes(position))\n          return (\n            <VStack\n              {..._stack}\n              key={position}\n              // @ts-ignore\n              {...POSITIONS[position]}\n            >\n              {\n                // @ts-ignore\n                toastInfo[position].map((toast: IToast) => (\n                  <PresenceTransition\n                    {..._presenceTransition}\n                    key={toast.id}\n                    visible={visibleToasts[toast.id]}\n                    onTransitionComplete={(status: any) => {\n                      if (status === 'exited') {\n                        removeToast(toast.id);\n                        toast.config?.onCloseComplete &&\n                          toast.config?.onCloseComplete();\n                      }\n                    }}\n                    initial={{\n                      opacity: 0,\n                      translateY: transitionConfig[position],\n                    }}\n                  >\n                    <SafeAreaView>\n                      <Box\n                        bottom={\n                          ['bottom', 'bottom-left', 'bottom-right'].includes(\n                            position\n                          )\n                            ? bottomInset + 'px'\n                            : undefined\n                        }\n                      >\n                        {toast.component}\n                      </Box>\n                    </SafeAreaView>\n                  </PresenceTransition>\n                ))\n              }\n            </VStack>\n          );\n        else return null;\n      })}\n    </Overlay>\n  ) : null;\n};\n\nexport const ToastProvider = ({ children }: { children: any }) => {\n  const [toastInfo, setToastInfo] = useState<IToastInfo>({});\n  const [visibleToasts, setVisibleToasts] = useState<\n    {\n      [key in string]: boolean;\n    }\n  >({});\n\n  const [themeProps] = useState(usePropsResolution('Toast', {}));\n  const toastIndex = React.useRef(1);\n\n  const hideAll = React.useCallback(() => {\n    setVisibleToasts({});\n  }, [setVisibleToasts]);\n\n  const hideToast = React.useCallback(\n    (id: any) => {\n      setVisibleToasts((prevVisibleToasts) => ({\n        ...prevVisibleToasts,\n        [id]: false,\n      }));\n    },\n    [setVisibleToasts]\n  );\n\n  const isActive = React.useCallback(\n    (id: any) => {\n      for (const toastPosition of Object.keys(toastInfo)) {\n        const positionArray: Array<IToast> = toastInfo[toastPosition];\n        return positionArray.findIndex((toastData) => toastData.id === id) > -1;\n      }\n\n      return false;\n    },\n    [toastInfo]\n  );\n\n  const removeToast = React.useCallback(\n    (id: any) => {\n      setToastInfo((prev) => {\n        for (const toastPosition of Object.keys(prev)) {\n          const positionArray: Array<IToast> = prev[toastPosition];\n          const isToastPresent =\n            positionArray.findIndex((toastData) => toastData.id === id) > -1;\n\n          if (isToastPresent) {\n            const newPositionArray = positionArray.filter(\n              (item) => item.id !== id\n            );\n            const temp: any = {};\n            temp[toastPosition] = newPositionArray;\n\n            const newToastInfo = { ...prev, ...temp };\n            return newToastInfo;\n          }\n        }\n\n        return prev;\n      });\n    },\n    [setToastInfo]\n  );\n\n  const setToast = React.useCallback(\n    (props: IToastProps): number => {\n      const {\n        placement = 'bottom',\n        title,\n        render,\n        id = toastIndex.current++,\n        description,\n        duration = 5000,\n        _title,\n        _description,\n        accessibilityAnnouncement,\n        ...rest\n      } = props;\n\n      let positionToastArray = toastInfo[placement];\n      if (!positionToastArray) positionToastArray = [];\n\n      let component = null;\n\n      if (render) {\n        component = render({ id });\n      } else {\n        component = (\n          // Below VStack is the default component where all the direct props spread.\n          <VStack {...themeProps} {...rest}>\n            <Box _text={{ ...themeProps._title, ..._title }}>{title}</Box>\n            {description && (\n              <Box _text={{ ...themeProps._description, ..._description }}>\n                {description}\n              </Box>\n            )}\n          </VStack>\n        );\n      }\n\n      toastInfo[placement] = [\n        ...positionToastArray,\n        { component, id, config: props },\n      ];\n\n      setToastInfo({ ...toastInfo });\n\n      setVisibleToasts({ ...visibleToasts, [id]: true });\n      if (duration !== null) {\n        setTimeout(function () {\n          hideToast(id);\n        }, duration);\n      }\n\n      // iOS doesn't support accessibilityLiveRegion\n      if (accessibilityAnnouncement && Platform.OS === 'ios') {\n        AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n      }\n\n      return id;\n    },\n    [themeProps, toastInfo, visibleToasts, hideToast]\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      toastInfo,\n      setToastInfo,\n      setToast,\n      removeToast,\n      hideAll,\n      isActive,\n      visibleToasts,\n      setVisibleToasts,\n      hideToast,\n    };\n  }, [\n    toastInfo,\n    setToastInfo,\n    setToast,\n    removeToast,\n    hideAll,\n    isActive,\n    visibleToasts,\n    setVisibleToasts,\n    hideToast,\n  ]);\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      {children}\n      <CustomToast\n        _overlay={themeProps._overlay}\n        _stack={themeProps._stack}\n        _presenceTransition={themeProps._presenceTransition}\n      />\n    </ToastContext.Provider>\n  );\n};\n\nexport const useToast = () => {\n  const { setToast, hideAll, isActive, hideToast } = React.useContext(\n    ToastContext\n  );\n\n  const toast = useMemo(\n    () => ({\n      show: setToast,\n      close: hideToast,\n      closeAll: hideAll,\n      isActive,\n    }),\n    [setToast, hideAll, isActive, hideToast]\n  );\n\n  return toast;\n};\n\nexport type IToastService = ReturnType<typeof useToast>;\n\nexport const ToastRef = React.createRef<IToastService>() as MutableRefObject<IToastService>;\n\nexport const Toast: IToastService = {\n  show: (props: IToastProps) => ToastRef.current?.show(props),\n  close: (id: any) => ToastRef.current?.close(id),\n  closeAll: () => ToastRef.current?.closeAll(),\n  isActive: (id: any) => ToastRef.current?.isActive(id),\n};\n"]},"metadata":{},"sourceType":"module"}