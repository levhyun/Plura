{"ast":null,"code":"import { useStyledSystemPropsResolver } from '../useStyledSystemPropsResolver';\nimport { useNativeBaseConfig } from '../../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../../theme/tools';\nimport { useTheme } from '../useTheme';\nimport { useMemo } from 'react'; //@ts-ignore\n\nimport stableHash from 'stable-hash';\nexport const useSx = () => {\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  const theme = useTheme();\n  const Sx = query => {\n    const StableHashQuery = stableHash(query);\n    const checkWarning = useMemo(() => {\n      return isResponsiveAnyProp(query, theme); // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [StableHashQuery]);\n    if (isSSR && checkWarning) {\n      console.warn(\"useSx prop doesn't resolve responsive prop with SSR\");\n    } // eslint-disable-next-line\n\n    const [_style, _restProps, styleFromProps] = useStyledSystemPropsResolver(query);\n    return styleFromProps;\n  };\n  return Sx;\n};","map":{"version":3,"mappings":"AAAA,SAASA,4BAAT,QAA6C,iCAA7C;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAGA,OAAO,MAAMC,KAAK,GAAG,MAAM;EACzB,MAAMC,KAAK,GAAGN,mBAAmB,CAAC,4BAAD,CAAnB,CAAkDM,KAAhE;EACA,MAAMC,KAAK,GAAGL,QAAQ,EAAtB;EACA,MAAMM,EAAE,GAAIC,KAAD,IAAwB;IACjC,MAAMC,eAAe,GAAGN,UAAU,CAACK,KAAD,CAAlC;IACA,MAAME,YAAY,GAAGR,OAAO,CAAC,MAAM;MACjC,OAAOF,mBAAmB,CAACQ,KAAD,EAAQF,KAAR,CAA1B,CADiC,CAEjC;IACD,CAH2B,EAGzB,CAACG,eAAD,CAHyB,CAA5B;IAKA,IAAIJ,KAAK,IAAIK,YAAb,EAA2B;MACzBC,OAAO,CAACC,IAAR,CAAa,qDAAb;IACD,CATgC,CAUjC;;IACA,MAAM,CAACC,MAAD,EAASC,UAAT,EAAqBC,cAArB,IAAuCjB,4BAA4B,CACvEU,KADuE,CAAzE;IAIA,OAAOO,cAAP;EACD,CAhBD;EAiBA,OAAOR,EAAP;AACD,CArBM","names":["useStyledSystemPropsResolver","useNativeBaseConfig","isResponsiveAnyProp","useTheme","useMemo","stableHash","useSx","isSSR","theme","Sx","query","StableHashQuery","checkWarning","console","warn","_style","_restProps","styleFromProps"],"sources":["C:\\Users\\user\\Desktop\\대회\\Plura\\src\\main\\frontend\\node_modules\\native-base\\lib\\module\\hooks\\useSx\\index.ts"],"sourcesContent":["import { useStyledSystemPropsResolver } from '../useStyledSystemPropsResolver';\nimport { useNativeBaseConfig } from '../../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../../theme/tools';\nimport { useTheme } from '../useTheme';\nimport { useMemo } from 'react';\n//@ts-ignore\nimport stableHash from 'stable-hash';\nimport type { StyledProps } from '../../theme/types';\n\nexport const useSx = () => {\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  const theme = useTheme();\n  const Sx = (query: StyledProps) => {\n    const StableHashQuery = stableHash(query);\n    const checkWarning = useMemo(() => {\n      return isResponsiveAnyProp(query, theme);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [StableHashQuery]);\n\n    if (isSSR && checkWarning) {\n      console.warn(\"useSx prop doesn't resolve responsive prop with SSR\");\n    }\n    // eslint-disable-next-line\n    const [_style, _restProps, styleFromProps] = useStyledSystemPropsResolver(\n      query\n    );\n\n    return styleFromProps;\n  };\n  return Sx;\n};\n"]},"metadata":{},"sourceType":"module"}