{"ast":null,"code":"import React from 'react';\nimport { AccessibilityInfo } from 'react-native';\nexport function useScreenReaderEnabled() {\n  const [enabled, setEnabled] = React.useState(false);\n  const mountedRef = React.useRef(false);\n  const handleSetEnabled = value => {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n  React.useEffect(() => {\n    mountedRef.current = true;\n    async function setInitialValue() {\n      const res = await AccessibilityInfo.isScreenReaderEnabled();\n      handleSetEnabled(res);\n    }\n    let handler = AccessibilityInfo.addEventListener('screenReaderChanged', event => {\n      handleSetEnabled(event);\n    });\n    setInitialValue();\n    return () => {\n      mountedRef.current = false;\n      AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n  return enabled;\n}","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,OAAO,SAASC,sBAAT,GAAkC;EACvC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAA9B;EACA,MAAMC,UAAU,GAAGN,KAAK,CAACO,MAAN,CAAa,KAAb,CAAnB;EAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAoB;IAC3C,IAAIH,UAAU,CAACI,OAAf,EAAwB;MACtBN,UAAU,CAACK,KAAD,CAAV;IACD;EACF,CAJD;EAMAT,KAAK,CAACW,SAAN,CAAgB,MAAM;IACpBL,UAAU,CAACI,OAAX,GAAqB,IAArB;IACA,eAAeE,eAAf,GAAiC;MAC/B,MAAMC,GAAG,GAAG,MAAMZ,iBAAiB,CAACa,qBAAlB,EAAlB;MACAN,gBAAgB,CAACK,GAAD,CAAhB;IACD;IAED,IAAIE,OAAY,GAAGd,iBAAiB,CAACe,gBAAlB,CACjB,qBADiB,EAEhBC,KAAD,IAAgB;MACdT,gBAAgB,CAACS,KAAD,CAAhB;IACD,CAJgB,CAAnB;IAOAL,eAAe;IACf,OAAO,MAAM;MACXN,UAAU,CAACI,OAAX,GAAqB,KAArB;MACAT,iBAAiB,CAACiB,mBAAlB,CAAsC,qBAAtC,EAA6DH,OAA7D;IACD,CAHD;EAID,CAnBD;EAqBA,OAAOZ,OAAP;AACD","names":["React","AccessibilityInfo","useScreenReaderEnabled","enabled","setEnabled","useState","mountedRef","useRef","handleSetEnabled","value","current","useEffect","setInitialValue","res","isScreenReaderEnabled","handler","addEventListener","event","removeEventListener"],"sources":["C:\\Users\\user\\node_modules\\native-base\\lib\\module\\hooks\\useScreenReaderEnabled.ts"],"sourcesContent":["import React from 'react';\nimport { AccessibilityInfo } from 'react-native';\n\nexport function useScreenReaderEnabled() {\n  const [enabled, setEnabled] = React.useState(false);\n  const mountedRef = React.useRef(false);\n\n  const handleSetEnabled = (value: boolean) => {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n\n  React.useEffect(() => {\n    mountedRef.current = true;\n    async function setInitialValue() {\n      const res = await AccessibilityInfo.isScreenReaderEnabled();\n      handleSetEnabled(res);\n    }\n\n    let handler: any = AccessibilityInfo.addEventListener(\n      'screenReaderChanged',\n      (event: any) => {\n        handleSetEnabled(event);\n      }\n    );\n\n    setInitialValue();\n    return () => {\n      mountedRef.current = false;\n      AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n\n  return enabled;\n}\n"]},"metadata":{},"sourceType":"module"}